USE [CBDB_STAGE]
GO
DROP VIEW IF EXISTS VW_ACCOUNT_OUT_AMOUNT

/****** Object:  View [CBDB_LOANS_ADMIN].[VW_ACCOUNT_OUT_AMOUNT]    Script Date: 03/26/2020 6:20:52 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW VW_ACCOUNT_OUT_AMOUNT
AS
SELECT 
 M.ACCOUNT_NO
,M.OUTSTD_LPC_AMOUNT
,(CASE WHEN M.REAL_STAGE_DISBURSE_NO = 0 THEN ISNULL(M2.REPRI_PRINCIPAL_BALANCE, 0) ELSE ISNULL(M.PRINCIPAL_BALANCE, 0) END)
	+ (CASE WHEN AI.SCHEDULE_NO_OF_PAYMENT > AIT.INSTALLMENT_NO THEN ISNULL(M.OUTSTD_TOTAL_INTR_AMNT, 0)
	ELSE M.OUTSTD_OVERDUE_INTR + (AIT.INTEREST_AMOUNT - AIT.INSTALLMENT_INTEREST_PAID) END )
	+ ISNULL(M.OUTSTD_CHARGES_AMOUNT, 0) + ISNULL(M.OUTSTD_LPC_AMOUNT, 0)
	+ ISNULL(M.OUTSTD_RECURRING_COST_AMOUNT, 0) + ISNULL(OUTSTD_INTEREST_CHARGE_AMOUNT, 0) 'OUTSTD_TOTAL_LOAN_AMOUNT'
FROM
   (SELECT
		LAI.ACCOUNT_NO
	   ,SUM(ISNULL(DAI.PRINCIPAL_BALANCE, 0)) 'PRINCIPAL_BALANCE'
	   ,MAX(ISNULL(DAI.ID, 0)) 'DAILY_ID'
	   ,SUM(ISNULL(DAI.DAY_OUTSTANDING_LPC, 0)) 'OUTSTD_LPC_AMOUNT'
	   ,MAX(CASE WHEN LAI.STAGE_DISBURSE_NO = 0 THEN 0 ELSE -1 END) 'REAL_STAGE_DISBURSE_NO'
	   ,SUM(ISNULL(DAI.INTEREST_BALANCE, 0)) 'OUTSTD_TOTAL_INTR_AMNT'
	   ,SUM(ISNULL(DAI.SUM_INTEREST_OVERDUE, 0)) 'OUTSTD_OVERDUE_INTR'
	   ,SUM(ISNULL(DAI.DAY_OUTSTANDING_CHARGES, 0)) 'OUTSTD_CHARGES_AMOUNT'
	   ,SUM(ISNULL(DAI.DAY_OUTSTANDING_RECURRING_COST, 0)) 'OUTSTD_RECURRING_COST_AMOUNT'
	   ,SUM(ISNULL(DAI.DAY_OUTSTANDING_INTEREST_CHARGE, 0)) 'OUTSTD_INTEREST_CHARGE_AMOUNT'
	FROM	  CBDB_STAGE.LMS.AMORTIZATION_INFO  LAI WITH(NOLOCK)
	LEFT JOIN CBDB_STAGE.LMS.DAILY_ACCOUNT_INFO DAI WITH(NOLOCK) ON LAI.AMORTIZATION_INFO_ID = DAI.AMORTIZATION_INFO_ID
	GROUP BY LAI.ACCOUNT_NO ) M
LEFT JOIN CBDB_STAGE.LMS.DAILY_ACCOUNT_INFO DA WITH(NOLOCK) ON DA.ID = M.DAILY_ID
LEFT JOIN CBDB_STAGE.LMS.AMORTIZATION_INFO  AI WITH(NOLOCK) ON DA.AMORTIZATION_INFO_ID = AI.AMORTIZATION_INFO_ID
LEFT JOIN CBDB_STAGE.LMS.AMORTIZATION_ITEM AIT WITH(NOLOCK) ON AI.AMORTIZATION_INFO_ID = AIT.AMORTIZATION_INFO_ID
														   AND AIT.ID = (SELECT MAX(ID) FROM CBDB_STAGE.LMS.AMORTIZATION_ITEM WITH(NOLOCK) WHERE AMORTIZATION_INFO_ID = AIT.AMORTIZATION_INFO_ID)
LEFT JOIN ( SELECT 
				L.ACCOUNT_NO
			   ,SUM(ISNULL(D.PRINCIPAL_BALANCE,0)) 'REPRI_PRINCIPAL_BALANCE'
			FROM       CBDB_STAGE.LMS.AMORTIZATION_INFO  L WITH(NOLOCK)
			INNER JOIN CBDB_STAGE.LMS.DAILY_ACCOUNT_INFO D WITH(NOLOCK) ON L.AMORTIZATION_INFO_ID = D.AMORTIZATION_INFO_ID
			WHERE L.STAGE_DISBURSE_NO = 0
			GROUP BY L.ACCOUNT_NO
			) M2 ON M2.ACCOUNT_NO = M.ACCOUNT_NO

GO