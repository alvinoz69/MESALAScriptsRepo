USE CBDB_STAGE
GO

DROP PROCEDURE IF EXISTS dbo.FILL_DEFICIENT_ACCOUNTS

	SET ANSI_NULLS ON
	GO
	SET QUOTED_IDENTIFIER ON
	GO

CREATE PROCEDURE dbo.FILL_DEFICIENT_ACCOUNTS
	@HEADER_ID BIGINT,
	@BUSINESS_DATE DATE,
	@IS_COMPLETED INT = 0,
	@SP_NAME NVARCHAR(50) = 'FILL_DEFICIENT_ACCOUNTS',
	@TABLE_NAME NVARCHAR(100) = 'RPT.DEFICIENT_ACCOUNTS',
	@INSERTED_RECORDS BIGINT = 0,
	@ERR_MSG NVARCHAR(500) = '',
	@DURATION BIGINT = 0
AS

BEGIN
	--CHECK STATUS IF COMPLETED
	SET @IS_COMPLETED = ISNULL((SELECT TOP 1 [STATUS] FROM CBDB_REPORTS.RPT.SP_LOG WITH(NOLOCK) WHERE BUSINESS_DATE = @BUSINESS_DATE AND HEADER_ID = @HEADER_ID AND NAME = @SP_NAME ORDER BY ID DESC),0)
	
	--LOGGED IF PROCESS ALREADY COMPLETED
	IF (@IS_COMPLETED = 4) BEGIN  PRINT @SP_NAME + ' IS ALREADY COMPLETED.' END
	IF @IS_COMPLETED <> 4
	BEGIN
		
		--IF TABLE HAS ERROR PREVIOUSLY, DELETE ALL RECORDS FROM TABLE WITH CURRENT HEADER_ID	
		IF @IS_COMPLETED = 3
		BEGIN
			EXEC ('DELETE FROM CBDB_REPORTS.' + @TABLE_NAME + ' WHERE HEADER_ID = ' + @HEADER_ID +' AND BUSINESS_DATE=' + ''''+ @BUSINESS_DATE + ''''+'')
		END

		--LOG START
		BEGIN
			INSERT INTO CBDB_REPORTS.RPT.SP_LOG (HEADER_ID  ,NAME	  ,BUSINESS_DATE  ,TIME_STARTED ,STATUS)
									VALUES		(@HEADER_ID ,@SP_NAME ,@BUSINESS_DATE ,GETDATE()    ,1)
			PRINT '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
			PRINT 'STATUS : STARTED   | PROCEDURE NAME : ' + @SP_NAME + ' | HEADER_ID : ' + CAST(@HEADER_ID AS VARCHAR(MAX)) + ' | TIME STARTED : ' + CAST(GETDATE() AS VARCHAR(MAX)) + ' | BUSINESS DATE : ' + CAST(@BUSINESS_DATE AS VARCHAR(MAX))			
		END

		BEGIN TRY
			SELECT @INSERTED_RECORDS = 0						  
			BEGIN
			--->INSERT INTO SELECT STATEMENT
				--DEF NOTICE - CODE = 0;  generate def notice if past due today
				INSERT INTO CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS WITH(TABLOCK) 
						  (HEADER_ID  ,ACCOUNT_NO     ,BUSINESS_DATE  ,CODE ,BALANCE                     ,LOAN_BALANCE               ,DATE_CREATED,IS_MIGRATED)
					SELECT @HEADER_ID ,ACM.ACCOUNT_NO ,@BUSINESS_DATE ,0    ,ISNULL(ACM.TOTAL_OVERDUE,0) ,ISNULL(ACM.LOAN_BALANCE,0) ,GETDATE()	  ,0
				FROM CBDB_REPORTS.LMS.ACCOUNT_MASTER ACM WITH(NOLOCK)
				WHERE ACM.IS_CLOSE = 0
				AND   ACM.ACCOUNT_STATUS_CODE <> '01'
				AND   DATEDIFF(DAY, ACM.PAST_DUE_DATE ,(SELECT CURRENT_BUSINESS_DATE FROM CBDB_REPORTS.CMN.BANK_SUNDRY)) = 0
				SET @INSERTED_RECORDS = @INSERTED_RECORDS + @@ROWCOUNT

				--1st Collection Letter
				INSERT INTO CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS WITH(TABLOCK) 
						  (HEADER_ID  ,ACCOUNT_NO     ,BUSINESS_DATE  ,CODE ,BALANCE                     ,LOAN_BALANCE               ,DATE_CREATED,IS_MIGRATED)
					SELECT @HEADER_ID ,ACM.ACCOUNT_NO ,@BUSINESS_DATE ,1    ,ISNULL(ACM.TOTAL_OVERDUE,0) ,ISNULL(ACM.LOAN_BALANCE,0) ,GETDATE()	  ,0
				FROM CBDB_REPORTS.LMS.ACCOUNT_MASTER ACM WITH(NOLOCK)
				LEFT JOIN CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS DA WITH(NOLOCK)
					ON ACM.ACCOUNT_NO = DA.ACCOUNT_NO  AND DA.ID = (SELECT MAX(ID) FROM CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS WHERE CODE = 0 AND ACCOUNT_NO = ACM.ACCOUNT_NO)
				WHERE ACM.IS_CLOSE = 0
				AND   ACM.ACCOUNT_STATUS_CODE <> '01'
				AND   DATEDIFF(DAY, DA.BUSINESS_DATE ,(SELECT CURRENT_BUSINESS_DATE FROM CBDB_REPORTS.CMN.BANK_SUNDRY)) = (SELECT TOP 1 VARIABLE_VALUE FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WHERE VARIABLE_CODE = 'NOF_DAY_1stNOD')
				SET @INSERTED_RECORDS = @INSERTED_RECORDS + @@ROWCOUNT

				--2nd Collection Letter
				INSERT INTO CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS WITH(TABLOCK) 
						  (HEADER_ID  ,ACCOUNT_NO     ,BUSINESS_DATE  ,CODE ,BALANCE                     ,LOAN_BALANCE               ,DATE_CREATED,IS_MIGRATED)
					SELECT @HEADER_ID ,ACM.ACCOUNT_NO ,@BUSINESS_DATE ,2    ,ISNULL(ACM.TOTAL_OVERDUE,0) ,ISNULL(ACM.LOAN_BALANCE,0) ,GETDATE()	  ,0
				FROM CBDB_REPORTS.LMS.ACCOUNT_MASTER ACM WITH(NOLOCK)
				LEFT JOIN CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS DA WITH(NOLOCK)
					ON ACM.ACCOUNT_NO = DA.ACCOUNT_NO  AND DA.ID = (SELECT MAX(ID) FROM CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS WHERE CODE = 1 AND ACCOUNT_NO = ACM.ACCOUNT_NO)
				WHERE ACM.IS_CLOSE = 0
				AND   ACM.ACCOUNT_STATUS_CODE <> '01'
				AND   DATEDIFF(DAY, DA.BUSINESS_DATE ,(SELECT CURRENT_BUSINESS_DATE FROM CBDB_REPORTS.CMN.BANK_SUNDRY)) = (SELECT TOP 1 VARIABLE_VALUE FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WHERE VARIABLE_CODE = 'NOF_DAY_2ndNOD')
				SET @INSERTED_RECORDS = @INSERTED_RECORDS + @@ROWCOUNT
				
				--3rd Collection Letter
				INSERT INTO CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS WITH(TABLOCK) 
						  (HEADER_ID  ,ACCOUNT_NO     ,BUSINESS_DATE  ,CODE ,BALANCE                     ,LOAN_BALANCE               ,DATE_CREATED,IS_MIGRATED)
					SELECT @HEADER_ID ,ACM.ACCOUNT_NO ,@BUSINESS_DATE ,3    ,ISNULL(ACM.TOTAL_OVERDUE,0) ,ISNULL(ACM.LOAN_BALANCE,0) ,GETDATE()	  ,0
				FROM CBDB_REPORTS.LMS.ACCOUNT_MASTER ACM WITH(NOLOCK)
				LEFT JOIN CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS DA WITH(NOLOCK)
					ON ACM.ACCOUNT_NO = DA.ACCOUNT_NO  AND DA.ID = (SELECT MAX(ID) FROM CBDB_REPORTS.RPT.DEFICIENT_ACCOUNTS WHERE CODE = 2 AND ACCOUNT_NO = ACM.ACCOUNT_NO)
				WHERE ACM.IS_CLOSE = 0
				AND   ACM.ACCOUNT_STATUS_CODE <> '01'
				AND   DATEDIFF(DAY, DA.BUSINESS_DATE ,(SELECT CURRENT_BUSINESS_DATE FROM CBDB_REPORTS.CMN.BANK_SUNDRY)) = (SELECT TOP 1 VARIABLE_VALUE FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WHERE VARIABLE_CODE = 'NOF_DAY_3rdNOD')
			--->END OF INSERT INTO SELECT STATEMENT		
				SET @INSERTED_RECORDS = @INSERTED_RECORDS + @@ROWCOUNT
			END
		END TRY
		BEGIN CATCH
			SET @ERR_MSG = ERROR_MESSAGE()
			INSERT INTO CBDB_REPORTS.RPT.ERROR_DETAILS ([ERROR_NUMBER],[ERROR_SEVERITY],[ERROR_STATE],[ERROR_LINE],[ERROR_MESSAGE],[ERROR_TABLE],[TRANCOUNT],[REMARKS],[DATE_OCCURED])
			VALUES (ERROR_NUMBER(), ERROR_SEVERITY(), ERROR_STATE(),ERROR_LINE(),ERROR_MESSAGE(),@TABLE_NAME, CONVERT(varchar, @@TRANCOUNT),'',GETDATE());
			--LOG AFTER ERROR
			UPDATE CBDB_REPORTS.RPT.SP_LOG
				SET STATUS = 3
			WHERE HEADER_ID = @HEADER_ID AND BUSINESS_DATE = @BUSINESS_DATE
			PRINT '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
			PRINT 'STATUS : FAILED     | PROCEDURE NAME : ' + @SP_NAME + ' | HEADER_ID : ' + CAST(@HEADER_ID AS VARCHAR(MAX)) + ' | BUSINESS DATE : ' + CAST(@BUSINESS_DATE AS VARCHAR(MAX)) + ' | ERROR MESSAGE : ' + @ERR_MSG
			PRINT '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
		END CATCH

		--LOG FINISH IF THE TABLE HAS NO ERROR 
		IF @ERR_MSG IS NULL OR @ERR_MSG = ''
		BEGIN
			SET @DURATION = DATEDIFF(SECOND, (SELECT TOP 1 TIME_STARTED FROM CBDB_REPORTS.RPT.SP_LOG WHERE HEADER_ID = @HEADER_ID AND BUSINESS_DATE = @BUSINESS_DATE ORDER BY ID DESC), GETDATE())		
			UPDATE CBDB_REPORTS.RPT.SP_LOG
				SET STATUS	   = 4,
					TIME_ENDED = GETDATE(),
					DURATION   = @DURATION,
					INSERTED_RECORDS = @INSERTED_RECORDS
			WHERE HEADER_ID = @HEADER_ID AND BUSINESS_DATE = @BUSINESS_DATE  AND NAME = @SP_NAME
			PRINT 'STATUS : COMPLETED | PROCEDURE NAME : ' + @SP_NAME + ' | HEADER_ID : ' + CAST(@HEADER_ID AS VARCHAR(MAX)) + ' | RECORD COUNT : ' + CAST(@INSERTED_RECORDS AS VARCHAR(MAX)) + ' | TIME ENDED : ' + CAST(GETDATE() AS VARCHAR(MAX)) + ' | DURATION : ' + CONVERT(VARCHAR(50),@DURATION)			       
			PRINT '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
		END
	END
END