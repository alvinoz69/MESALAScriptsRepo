USE [CBDB_STAGE]
GO
DROP PROCEDURE IF EXISTS [dbo].[CMN_FINALIZER]
/****** Object:  StoredProcedure [dbo].[CMN_FINALIZER]    Script Date: 24/10/2019 10:07:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[CMN_FINALIZER]
AS
BEGIN

/**********************INITIALIZATION*********************/
DECLARE @HEADER_ID BIGINT, @BIZ_DATE DATE, @IS_TABLE_COMPLETED INT, @ROWS_INSERTED INT;
DECLARE @ID_CONTROL BIGINT, @BATCH_SIZE INT = 100000, @RESULTS BIGINT; --VARIABLES FOR BATCH INSERT
DECLARE @MODULE_CODE VARCHAR(50) = 'COR'
DECLARE @SCHEMA_NAME VARCHAR(50) = 'CMN'
DECLARE @STAGE_TABLE_NAME VARCHAR(100) = ''
DECLARE @REPORT_TABLE_NAME VARCHAR(100) = ''
DECLARE @IS_DUMP BIT = 0
DECLARE @DETAIL_ID BIGINT = 0
DECLARE @ERR_MSG VARCHAR(MAX) = ''
DECLARE @SP_NAME VARCHAR(50) = 'CMN_FINALIZER'
DECLARE @TABLE_COUNT INT = 0			   --FOR SP LOG
DECLARE @TABLE_SUCCEEDED INT = 0		   --FOR SP LOG
DECLARE @TOTAL_INSERTED_RECORDS BIGINT = 0 --FOR SP LOG
DECLARE @DURATION INT = 0
DECLARE @SRC_HEADER_ID BIGINT, @SRC_MODULE_CODE VARCHAR(50), @SRC_SCHEMA_NAME VARCHAR(50), @SRC_TABLE_NAME VARCHAR(50)

SET NOCOUNT ON;  --OPTIMIZATION
SELECT @HEADER_ID = ID,@MODULE_CODE = MODULE_CODE,@BIZ_DATE = BUSINESS_DATE FROM CBDB_STAGE.CMN.DATA_COPY_HEADER (NOLOCK) 
WHERE ID = (SELECT MAX(ID) FROM CBDB_STAGE.CMN.DATA_COPY_HEADER (NOLOCK) WHERE MODULE_CODE = 'COR');

SET @TABLE_COUNT = ISNULL((SELECT COUNT(TABLE_NAME) FROM CBDB_REPORTS.INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = @SCHEMA_NAME),0) - 4
/*********************************************************/

--CHECK IF HEADER IS NULL THEN BREAK
IF @HEADER_ID IS NULL BEGIN 
PRINT '**************************************************************'
PRINT 'SOMETHING WENT WRONG. UNABLE TO GET HEADER_ID OF MODULE : ' + @MODULE_CODE RETURN; END

--CHECK IF PROCESS IS DONE ALREADY, IF SO, THEN BREAK THE PROCESSS
IF EXISTS(SELECT 1 FROM CBDB_REPORTS.CMN.DATA_COPY_HEADER WITH(NOLOCK) WHERE BUSINESS_DATE = @BIZ_DATE AND [STATUS] = 4 AND MODULE_CODE = @MODULE_CODE) BEGIN PRINT 'PROCESS SKIPPED. ' + @MODULE_CODE + ' DATA ALREADY EXISTS.' RETURN; END

/*************************CMN.DATA_COPY_HEADER[START]*************************/
PRINT CHAR(13) + '*************************************************************************** ' + @SCHEMA_NAME + ' FINALIZER *********************************************************************************'
IF NOT EXISTS (SELECT 1 FROM CBDB_REPORTS.CMN.DATA_COPY_HEADER WITH(NOLOCK) WHERE BUSINESS_DATE = @BIZ_DATE AND MODULE_CODE = @MODULE_CODE)
BEGIN
	BEGIN TRAN
		SET IDENTITY_INSERT CBDB_REPORTS.CMN.DATA_COPY_HEADER ON
		
		INSERT INTO CBDB_REPORTS.CMN.DATA_COPY_HEADER WITH(TABLOCK) (ID, MODULE_CODE, BUSINESS_DATE, TOTAL_DUMP_RECORD, TOTAL_DELTA_RECORD,TIME_STARTED,[STATUS]) 
			   VALUES (@HEADER_ID, @MODULE_CODE, @BIZ_DATE, 0,0,GETDATE(),1);
		SET IDENTITY_INSERT CBDB_REPORTS.CMN.DATA_COPY_HEADER OFF
	COMMIT TRAN
	INSERT INTO CBDB_REPORTS.RPT.SP_LOG (HEADER_ID  ,NAME	  ,BUSINESS_DATE  ,TIME_STARTED ,STATUS)
								VALUES		(@HEADER_ID ,@SP_NAME ,@BIZ_DATE ,GETDATE()    ,1)
		PRINT '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
		PRINT 'STATUS : STARTED   | PROCEDURE NAME : ' + @SP_NAME + ' | HEADER_ID : ' + CAST(@HEADER_ID AS VARCHAR(MAX)) + ' | TIME STARTED : ' + CAST(GETDATE() AS VARCHAR(MAX)) + ' | BUSINESS DATE : ' + CAST(@BIZ_DATE AS VARCHAR(MAX))	
END
/*************************CMN.DATA_COPY_HEADER[END]**************************/

/*************************CMN.BANK_SUNDRY[START]*************************/
BEGIN
	SET @STAGE_TABLE_NAME = 'BANK_SUNDRY'
	SET @REPORT_TABLE_NAME = 'CMN.BANK_SUNDRY'
	--CHECK STATUS IF COMPLETED
	SET @IS_TABLE_COMPLETED = ISNULL((SELECT TOP 1 [STATUS] FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE TABLE_NAME = @REPORT_TABLE_NAME AND HEADER_ID = @HEADER_ID ORDER BY ID DESC),0)
	IF @IS_TABLE_COMPLETED <> 4	
	BEGIN	
	--LOG START
		BEGIN
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = 0, @STATUS = 1, @IS_DUMP = 1
		END
		SET @DETAIL_ID = ISNULL((SELECT MAX(ID) FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = @HEADER_ID AND TABLE_NAME = @REPORT_TABLE_NAME),0)
		BEGIN TRY
			BEGIN
				TRUNCATE TABLE CBDB_REPORTS.CMN.BANK_SUNDRY
				INSERT INTO CBDB_REPORTS.CMN.BANK_SUNDRY WITH(TABLOCK) (HEADER_ID,PREVIOUS_BUSINESS_DATE, CURRENT_BUSINESS_DATE,NEXT_BUSINESS_DATE) 
				SELECT TOP 1 @HEADER_ID, CONVERT(DATE,PREVIOUS_BUSINESS_DATE),CONVERT(DATE,PREVIOUS_BUSINESS_DATE) AS 'CURRENT_BUSINESS_DATE',CONVERT(DATE,NEXT_BUSINESS_DATE)
					   FROM CBDB_STAGE.CMN.BANK_SUNDRY (NOLOCK)
				ORDER BY ID DESC
				SET @ROWS_INSERTED = @@ROWCOUNT
			END
		END TRY
		BEGIN CATCH
			SET @ERR_MSG = ERROR_MESSAGE()
 			INSERT INTO CBDB_REPORTS.RPT.ERROR_DETAILS ([ERROR_NUMBER],[ERROR_SEVERITY],[ERROR_STATE],[ERROR_LINE],[ERROR_MESSAGE],[ERROR_TABLE],[TRANCOUNT],[REMARKS],[DATE_OCCURED])
			VALUES (ERROR_NUMBER(), ERROR_SEVERITY(), ERROR_STATE(),ERROR_LINE(),ERROR_MESSAGE(), @REPORT_TABLE_NAME, CONVERT(varchar, @@TRANCOUNT),'',GETDATE());
			--LOG AFTER ERROR			
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME , @BUS_DATE = @BIZ_DATE, @STATUS = 3, @FAIL_EXCEPTION = @ERR_MSG;
			THROW; --THROW ERROR TO FE
		END CATCH 

		--LOG FINISH IF THE TABLE HAS NO ERROR 
		IF @ERR_MSG IS NULL OR @ERR_MSG = ''
		BEGIN
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = @ROWS_INSERTED, @STATUS = 4, @MODULE_CODE = @MODULE_CODE, @SCHEMA_NAME = @SCHEMA_NAME, @STAGE_TABLE_NAME = @STAGE_TABLE_NAME
			SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1
		END

		--CLEAR VARIABLES
		SET @STAGE_TABLE_NAME = ''
		SET @REPORT_TABLE_NAME = ''
		SET @IS_DUMP = 0
		SET @DETAIL_ID = 0
		SET @ERR_MSG = ''
	END
END
/*************************CMN.BANK_SUNDRY[END]*************************/

/*************************CMN.BILLING[START]**************************/
BEGIN
	SET @STAGE_TABLE_NAME  = 'BILLING'
	SET @REPORT_TABLE_NAME = 'CMN.BILLING'
	--START OF SET TO INSERT
	SELECT @ID_CONTROL = ISNULL((SELECT MIN(ID) FROM CBDB_STAGE.CMN.BILLING WITH(NOLOCK) WHERE HEADER_ID = (SELECT TOP 1 HEADER_ID FROM CBDB_STAGE.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = @HEADER_ID AND TABLE_NAME = @STAGE_TABLE_NAME AND SCHEMA_NAME = @SCHEMA_NAME ORDER BY ID DESC)), 0)
	
	--CHECK STATUS IF COMPLETED
	SET @IS_TABLE_COMPLETED = ISNULL((SELECT TOP 1 [STATUS] FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE TABLE_NAME = @REPORT_TABLE_NAME AND HEADER_ID = @HEADER_ID ORDER BY ID DESC),0)

	--LOGGED IF PROCESS ALREADY COMPLETED
	IF (@IS_TABLE_COMPLETED = 4) BEGIN  PRINT @REPORT_TABLE_NAME + ' IS ALREADY COMPLETED.' SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1 END
	
	IF @IS_TABLE_COMPLETED <> 4
	BEGIN	
		SET @IS_DUMP = ISNULL((SELECT TOP 1 IS_DUMP FROM CBDB_STAGE.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE TABLE_NAME = @STAGE_TABLE_NAME AND HEADER_ID = @HEADER_ID AND SCHEMA_NAME = @SCHEMA_NAME ORDER BY ID DESC),0)
		
		--IF TABLE HAS ERROR PREVIOUSLY, DELETE ALL RECORDS FROM TABLE WITH CURRENT HEADER_ID	
		IF @IS_TABLE_COMPLETED = 3
		BEGIN
			EXEC ('DELETE FROM CBDB_REPORTS.' + @REPORT_TABLE_NAME + ' WHERE HEADER_ID = (SELECT TOP 1 HEADER_ID FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = ' + @HEADER_ID +' AND TABLE_NAME=' + ''''+ @REPORT_TABLE_NAME + ''''+' ORDER BY ID DESC)')
		END

		--IF DUMP, TRUNCATE THE TABLE BEFORE INSERTING
		IF @IS_DUMP = 1 AND @REPORT_TABLE_NAME IS NOT NULL
		BEGIN
			EXEC ('TRUNCATE TABLE CBDB_REPORTS.' + @REPORT_TABLE_NAME)
		END

		--LOG START
		BEGIN
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = 0, @STATUS = 1, @IS_DUMP = @IS_DUMP, @SCHEMA_NAME = @SCHEMA_NAME, @STAGE_TABLE_NAME = @STAGE_TABLE_NAME
		END

		SET @DETAIL_ID = ISNULL((SELECT MAX(ID) FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = @HEADER_ID AND TABLE_NAME = @REPORT_TABLE_NAME),0)
		--BATCH INSERT OF 100000
		BEGIN TRY
			SELECT @ROWS_INSERTED = 0,			
				   @RESULTS = 1; --STORES THE ROW COUNT A0FTER EACH SUCCESSFUL BATCH
			WHILE (@RESULTS > 0)
			BEGIN
			--->INSERT INTO SELECT STATEMENT
				INSERT INTO CBDB_REPORTS.CMN.BILLING WITH(TABLOCK) (HEADER_ID,BILLING_GROUP		  ,BILLING_GROUP_NAME  ,MAN_NO  ,COMP_CODE		 ,COMP_NAME			 ,LAST_NAME  ,FIRST_NAME  ,MIDDLE_NAME	,EXTN_NAME	  ,ACCOUNT_NO  ,MONTHLY_AMORT,INSTALLMENT_INTEREST         ,INSTALLMENT_PRINCIPAL	        ,CIF_NO  ,IS_BILL_GENERATED  ,LAST_UPDATED_DATE ,TRANSFERRED_TO_CO_MAKER																			,ORIGINAL_BORROWER,BILL_AMOUNT   ,BILLING_DATE)
			       SELECT										   @HEADER_ID,B.BILLING_GROUP_CODE,B.BILLING_GROUP_NAME,B.MAN_NO,B.CORPORATE_CODE,CCM.CORPORATE_DESC ,B.LAST_NAME,B.FIRST_NAME,B.MIDDLE_NAME,B.SUFFIX_NAME,B.ACCOUNT_NO,B.BILL_AMOUNT,B.INSTALLMENT_INTEREST_AMOUNT,B.INSTALLMENT_PRINCIPAL_AMOUNT,B.CIF_NO,B.IS_BILL_GENERATED,B.LAST_UPDATED_DATE ,(CASE WHEN COM.BILL_ALLOWED = 1 AND COM.STATUS = 1 THEN 1 ELSE 0 END) AS 'TRANSFERRED_TO_CO_MAKER' ,AI.ACCOUNT_NAME  ,B.BILL_AMOUNT ,B.BILLING_DATE
				   FROM CBDB_STAGE.CMN.BILLING B WITH(NOLOCK)
				   LEFT JOIN CBDB_STAGE.MMS.CLIENT C WITH(NOLOCK)
					ON	B.CIF_NO = C.CIF_NO
				   LEFT JOIN CBDB_STAGE.MMS.CFG_CORPORATE_MEMBER CCM WITH(NOLOCK)
					ON  C.CORP_CODE = CCM.CORPORATE_CODE
				   LEFT JOIN CBDB_STAGE.LMS.ACCOUNT_CO_MAKER COM WITH(NOLOCK)
					ON	B.ACCOUNT_NO = COM.ACCOUNT_NO AND C.CIF_NO = COM.CIF_NO
				   LEFT JOIN CBDB_STAGE.LMS.ACCOUNT_INFO AI WITH(NOLOCK)
					ON  B.ACCOUNT_NO = AI.ACCOUNT_NO
				   --MISSING COLUMNS (COMP_CODE, COMP_NAME, MONTHLY_AMORT)
			--->END OF INSERT INTO SELECT STATEMENT		
					 WHERE	B.ID >= @ID_CONTROL AND B.ID < @ID_CONTROL + @BATCH_SIZE AND B.HEADER_ID = @HEADER_ID--BATCH CONTROL OF THE CURRENT BATCH	
				SET @RESULTS = @@ROWCOUNT --OBTAINING LATEST ROWCOUNT
				SET @ROWS_INSERTED = @RESULTS + @ROWS_INSERTED
				SET @ID_CONTROL = @ID_CONTROL + @BATCH_SIZE --NEXT BATCH
			END
		END TRY
		BEGIN CATCH
			SET @ERR_MSG = ERROR_MESSAGE()
			INSERT INTO CBDB_REPORTS.RPT.ERROR_DETAILS ([ERROR_NUMBER],[ERROR_SEVERITY],[ERROR_STATE],[ERROR_LINE],[ERROR_MESSAGE],[ERROR_TABLE],[TRANCOUNT],[REMARKS],[DATE_OCCURED])
			VALUES (ERROR_NUMBER(), ERROR_SEVERITY(), ERROR_STATE(),ERROR_LINE(),ERROR_MESSAGE(),@REPORT_TABLE_NAME, CONVERT(varchar, @@TRANCOUNT),'',GETDATE());
			--LOG AFTER ERROR
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @STATUS = 3, @FAIL_EXCEPTION = @ERR_MSG, @STAGE_TABLE_NAME = @STAGE_TABLE_NAME;
			THROW; --THROW ERROR TO FE
		END CATCH

		--LOG FINISH IF THE TABLE HAS NO ERROR 
		IF @ERR_MSG IS NULL OR @ERR_MSG = ''
		BEGIN
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = @ROWS_INSERTED, @STATUS = 4, @MODULE_CODE = @MODULE_CODE, @SCHEMA_NAME = @SCHEMA_NAME, @STAGE_TABLE_NAME = @STAGE_TABLE_NAME
			SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1
		END

		--CLEAR VARIABLES
		SET @STAGE_TABLE_NAME = ''
		SET @REPORT_TABLE_NAME = ''
		SET @IS_DUMP = 0
		SET @DETAIL_ID = 0
		SET @ERR_MSG = ''
	END
END
/*************************CMN.BILLING[END]**************************/

/*************************CMN.BUSINESS_VARIABLE[START]**************************/
BEGIN
	SET @STAGE_TABLE_NAME  = 'BUSINESS_VARIABLE'
	SET @REPORT_TABLE_NAME = 'CMN.BUSINESS_VARIABLE'
	--START OF SET TO INSERT
	SELECT @ID_CONTROL = ISNULL((SELECT MIN(ID) FROM CBDB_STAGE.CMN.BUSINESS_VARIABLE WITH(NOLOCK) WHERE HEADER_ID = (SELECT TOP 1 HEADER_ID FROM CBDB_STAGE.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = @HEADER_ID AND TABLE_NAME = @STAGE_TABLE_NAME AND SCHEMA_NAME = @SCHEMA_NAME ORDER BY ID DESC)), 0)
	
	--CHECK STATUS IF COMPLETED
	SET @IS_TABLE_COMPLETED = ISNULL((SELECT TOP 1 [STATUS] FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE TABLE_NAME = @REPORT_TABLE_NAME AND HEADER_ID = @HEADER_ID ORDER BY ID DESC),0)

	--LOGGED IF PROCESS ALREADY COMPLETED
	IF (@IS_TABLE_COMPLETED = 4) BEGIN  PRINT @REPORT_TABLE_NAME + ' IS ALREADY COMPLETED.' SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1 END
	
	IF @IS_TABLE_COMPLETED <> 4
	BEGIN	
		SET @IS_DUMP = ISNULL((SELECT TOP 1 IS_DUMP FROM CBDB_STAGE.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE TABLE_NAME = @STAGE_TABLE_NAME AND HEADER_ID = @HEADER_ID AND SCHEMA_NAME = @SCHEMA_NAME ORDER BY ID DESC),0)
		
		--IF TABLE HAS ERROR PREVIOUSLY, DELETE ALL RECORDS FROM TABLE WITH CURRENT HEADER_ID	
		IF @IS_TABLE_COMPLETED = 3
		BEGIN
			EXEC ('DELETE FROM CBDB_REPORTS.' + @REPORT_TABLE_NAME + ' WHERE HEADER_ID = (SELECT TOP 1 HEADER_ID FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = ' + @HEADER_ID +' AND TABLE_NAME=' + ''''+ @REPORT_TABLE_NAME + ''''+' ORDER BY ID DESC)')
		END

		--IF DUMP, TRUNCATE THE TABLE BEFORE INSERTING
		IF @IS_DUMP = 1 AND @REPORT_TABLE_NAME IS NOT NULL
		BEGIN
			EXEC ('TRUNCATE TABLE CBDB_REPORTS.' + @REPORT_TABLE_NAME)
		END

		--LOG START
		BEGIN
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = 0, @STATUS = 1, @IS_DUMP = @IS_DUMP, @SCHEMA_NAME = @SCHEMA_NAME, @STAGE_TABLE_NAME = @STAGE_TABLE_NAME
		END

		SET @DETAIL_ID = ISNULL((SELECT MAX(ID) FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = @HEADER_ID AND TABLE_NAME = @REPORT_TABLE_NAME),0)
		--BATCH INSERT OF 100000
		BEGIN TRY
			SELECT @ROWS_INSERTED = 0,			
				   @RESULTS = 1; --STORES THE ROW COUNT A0FTER EACH SUCCESSFUL BATCH
			WHILE (@RESULTS > 0)
			BEGIN
			--->INSERT INTO SELECT STATEMENT
				INSERT INTO CBDB_REPORTS.CMN.BUSINESS_VARIABLE WITH(TABLOCK) (HEADER_ID,VARIABLE_CODE ,VARIABLE_DESCRIPTION ,VARIABLE_VALUE ,VARIABLE_DATA_TYPE ,IS_EDITABLE ,LAST_UPDATED_DATE ,LAST_UPDATED_BY ,STATUS)
			       SELECT										             @HEADER_ID,VARIABLE_CODE ,VARIABLE_DESCRIPTION ,VARIABLE_VALUE ,VARIABLE_DATA_TYPE ,IS_EDITABLE ,LAST_UPDATED_DATE ,LAST_UPDATED_BY ,STATUS
				   FROM CBDB_STAGE.CMN.BUSINESS_VARIABLE WITH(NOLOCK)				   
			--->END OF INSERT INTO SELECT STATEMENT		
					 WHERE	ID >= @ID_CONTROL AND ID < @ID_CONTROL + @BATCH_SIZE AND HEADER_ID = @HEADER_ID	--BATCH CONTROL OF THE CURRENT BATCH	
				SET @RESULTS = @@ROWCOUNT --OBTAINING LATEST ROWCOUNT
				SET @ROWS_INSERTED = @RESULTS + @ROWS_INSERTED
				SET @ID_CONTROL = @ID_CONTROL + @BATCH_SIZE --NEXT BATCH
			END
		END TRY
		BEGIN CATCH
			SET @ERR_MSG = ERROR_MESSAGE()
			INSERT INTO CBDB_REPORTS.RPT.ERROR_DETAILS ([ERROR_NUMBER],[ERROR_SEVERITY],[ERROR_STATE],[ERROR_LINE],[ERROR_MESSAGE],[ERROR_TABLE],[TRANCOUNT],[REMARKS],[DATE_OCCURED])
			VALUES (ERROR_NUMBER(), ERROR_SEVERITY(), ERROR_STATE(),ERROR_LINE(),ERROR_MESSAGE(),@REPORT_TABLE_NAME, CONVERT(varchar, @@TRANCOUNT),'',GETDATE());
			--LOG AFTER ERROR
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @STATUS = 3, @FAIL_EXCEPTION = @ERR_MSG, @STAGE_TABLE_NAME = @STAGE_TABLE_NAME;
			THROW; --THROW ERROR TO FE
		END CATCH

		--LOG FINISH IF THE TABLE HAS NO ERROR 
		IF @ERR_MSG IS NULL OR @ERR_MSG = ''
		BEGIN
			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = @ROWS_INSERTED, @STATUS = 4, @MODULE_CODE = @MODULE_CODE, @SCHEMA_NAME = @SCHEMA_NAME, @STAGE_TABLE_NAME = @STAGE_TABLE_NAME
			SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1
		END

		--CLEAR VARIABLES
		SET @STAGE_TABLE_NAME = ''
		SET @REPORT_TABLE_NAME = ''
		SET @IS_DUMP = 0
		SET @DETAIL_ID = 0
		SET @ERR_MSG = ''
	END
END
/*************************CMN.BUSINESS_VARIABLE[END]**************************/
/*************************RPT.REPORT_CONFIGURATION_TABLE[SART]**************************/
--BEGIN
--	SET @REPORT_TABLE_NAME = 'RPT.REPORT_CONFIGURATION_TABLE'
--	SET @SRC_TABLE_NAME = 'CMN.BUSINESS_VARIABLE'
--	SET @SRC_SCHEMA_NAME = 'RPT'

--	--CHECK STATUS IF COMPLETED
--	SET @IS_TABLE_COMPLETED = ISNULL((SELECT TOP 1 [STATUS] FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE TABLE_NAME = @REPORT_TABLE_NAME AND HEADER_ID = @HEADER_ID ORDER BY ID DESC),0)

--	--LOGGED IF PROCESS ALREADY COMPLETED
--	IF (@IS_TABLE_COMPLETED = 4) BEGIN  PRINT @REPORT_TABLE_NAME + ' IS ALREADY COMPLETED.' SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1 END
	
--	IF @IS_TABLE_COMPLETED <> 4
--	BEGIN
--		SET @IS_DUMP = 1

--		--IF TABLE HAS ERROR PREVIOUSLY, DELETE ALL RECORDS FROM TABLE WITH CURRENT HEADER_ID	
--		IF @IS_TABLE_COMPLETED = 3
--		BEGIN
--			EXEC ('DELETE FROM CBDB_REPORTS.' + @REPORT_TABLE_NAME + ' WHERE HEADER_ID = (SELECT TOP 1 HEADER_ID FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = ' + @HEADER_ID +' AND TABLE_NAME=' + ''''+ @REPORT_TABLE_NAME + ''''+' ORDER BY ID DESC)')
--		END
--		--AUTO DUMP TABLE
--		BEGIN
--			EXEC ('TRUNCATE TABLE CBDB_REPORTS.' + @REPORT_TABLE_NAME)
--		END

--		--LOG START
--		BEGIN
--			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = 0, @STATUS = 1, @IS_DUMP = @IS_DUMP, @SCHEMA_NAME = @SCHEMA_NAME, @STAGE_TABLE_NAME = @SRC_TABLE_NAME
--		END

--		SET @DETAIL_ID = ISNULL((SELECT MAX(ID) FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = @HEADER_ID AND TABLE_NAME = @REPORT_TABLE_NAME),0)

--		BEGIN TRY
--			SELECT @ROWS_INSERTED = 0,			
--				   @RESULTS = 1; --STORES THE ROW COUNT

--			BEGIN
--				--->INSERT INTO SELECT STATEMENT
--				INSERT INTO CBDB_REPORTS.RPT.REPORT_CONFIGURATION_TABLE WITH(TABLOCK) 
--						   (HEADER_ID, PARENT_DIRECTORY, OUTPUT_DIRECTORY, TIMEOUT_INTERVAL)
--			       SELECT  @HEADER_ID, A.PARENT_DIR,	 B.OUTPUT_DIR,	   C.TIMEOUT_INT 
--				   FROM
--				   		  (SELECT VARIABLE_VALUE 'PARENT_DIR' FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WITH(NOLOCK) WHERE VARIABLE_CODE = 'RPT_PARENT_DIR')A,
--				   		  (SELECT VARIABLE_VALUE 'OUTPUT_DIR' FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WITH(NOLOCK) WHERE VARIABLE_CODE = 'RPT_OUTPUT_DIR')B,
--				   		  (SELECT VARIABLE_VALUE 'TIMEOUT_INT' FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WITH(NOLOCK) WHERE VARIABLE_CODE = 'RPT_TIMEOUT_INTERVAL')C				   
--				--->END OF INSERT INTO SELECT STATEMENT		
--					-- WHERE	ID >= @ID_CONTROL AND ID < @ID_CONTROL + @BATCH_SIZE AND HEADER_ID = @HEADER_ID	--BATCH CONTROL OF THE CURRENT BATCH	
--				SET @RESULTS = @@ROWCOUNT --OBTAINING LATEST ROWCOUNT
--				SET @ROWS_INSERTED = @RESULTS + @ROWS_INSERTED
--			END
--		END TRY 
--		BEGIN CATCH
--			SET @ERR_MSG = ERROR_MESSAGE()
--			INSERT INTO CBDB_REPORTS.RPT.ERROR_DETAILS ([ERROR_NUMBER],[ERROR_SEVERITY],[ERROR_STATE],[ERROR_LINE],[ERROR_MESSAGE],[ERROR_TABLE],[TRANCOUNT],[REMARKS],[DATE_OCCURED])
--			VALUES (ERROR_NUMBER(), ERROR_SEVERITY(), ERROR_STATE(),ERROR_LINE(),ERROR_MESSAGE(),@REPORT_TABLE_NAME, CONVERT(varchar, @@TRANCOUNT),'',GETDATE());
--			--LOG AFTER ERROR
--			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @STATUS = 3, @FAIL_EXCEPTION = @ERR_MSG, @STAGE_TABLE_NAME = SCHEMA_NAME;
--			THROW; --THROW ERROR TO FE
--		END CATCH

--		--LOG FINISH IF THE TABLE HAS NO ERROR 
--		IF @ERR_MSG IS NULL OR @ERR_MSG = ''
--		BEGIN
--			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = @ROWS_INSERTED, @STATUS = 4, @MODULE_CODE = @MODULE_CODE, @SCHEMA_NAME = @SRC_SCHEMA_NAME, @STAGE_TABLE_NAME = @SRC_TABLE_NAME
--			SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1
--		END

--		--CLEAR VARIABLES
--		SET @STAGE_TABLE_NAME = ''
--		SET @REPORT_TABLE_NAME = ''
--		SET @IS_DUMP = 0
--		SET @DETAIL_ID = 0
--		SET @ERR_MSG = ''
--	END
--END
/*************************RPT.REPORT_CONFIGURATION_TABLE[END]**************************/

/*************************RPT.BANK_DETAILS[START]**************************/
--BEGIN
--	SET @REPORT_TABLE_NAME = 'RPT.BANK_DETAILS'
--	SET @SRC_TABLE_NAME = 'CMN.BUSINESS_VARIABLE'
--	SET @SRC_SCHEMA_NAME = 'RPT'

--	--CHECK STATUS IF COMPLETED
--	SET @IS_TABLE_COMPLETED = ISNULL((SELECT TOP 1 [STATUS] FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE TABLE_NAME = @REPORT_TABLE_NAME AND HEADER_ID = @HEADER_ID ORDER BY ID DESC),0)

--	--LOGGED IF PROCESS ALREADY COMPLETED
--	IF (@IS_TABLE_COMPLETED = 4) BEGIN  PRINT @REPORT_TABLE_NAME + ' IS ALREADY COMPLETED.' SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1 END
	
--	IF @IS_TABLE_COMPLETED <> 4
--	BEGIN
--		SET @IS_DUMP = 1

--		--IF TABLE HAS ERROR PREVIOUSLY, DELETE ALL RECORDS FROM TABLE WITH CURRENT HEADER_ID	
--		IF @IS_TABLE_COMPLETED = 3
--		BEGIN
--			EXEC ('DELETE FROM CBDB_REPORTS.' + @REPORT_TABLE_NAME + ' WHERE HEADER_ID = (SELECT TOP 1 HEADER_ID FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = ' + @HEADER_ID +' AND TABLE_NAME=' + ''''+ @REPORT_TABLE_NAME + ''''+' ORDER BY ID DESC)')
--		END
--		--AUTO DUMP TABLE
--		BEGIN
--			EXEC ('TRUNCATE TABLE CBDB_REPORTS.' + @REPORT_TABLE_NAME)
--		END

--		--LOG START
--		BEGIN
--			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = 0, @STATUS = 1, @IS_DUMP = @IS_DUMP, @SCHEMA_NAME = @SCHEMA_NAME, @STAGE_TABLE_NAME = @SRC_TABLE_NAME
--		END

--		SET @DETAIL_ID = ISNULL((SELECT MAX(ID) FROM CBDB_REPORTS.CMN.DATA_COPY_DETAIL WITH(NOLOCK) WHERE HEADER_ID = @HEADER_ID AND TABLE_NAME = @REPORT_TABLE_NAME),0)

--		BEGIN TRY
--			SELECT @ROWS_INSERTED = 0,			
--				   @RESULTS = 1; --STORES THE ROW COUNT

--			BEGIN
--				--->INSERT INTO SELECT STATEMENT
--				INSERT INTO CBDB_REPORTS.RPT.BANK_DETAILS WITH(TABLOCK) 
--						   (HEADER_ID, BANK_NAME, BANK_SHORT_NAME, BANK_ADDRESS)
--			       SELECT  @HEADER_ID, A.BANK_NAME,	 B.BANK_SHORT_NAME,	   C.BANK_ADDRESS 
--				   FROM
--				   		  (SELECT VARIABLE_VALUE 'BANK_NAME' FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WITH(NOLOCK) WHERE VARIABLE_CODE = 'RPT_BANK_NAME')A,
--				   		  (SELECT VARIABLE_VALUE 'BANK_SHORT_NAME' FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WITH(NOLOCK) WHERE VARIABLE_CODE = 'RPT_BANK_SHORT_NAME')B,
--				   		  (SELECT VARIABLE_VALUE 'BANK_ADDRESS' FROM CBDB_REPORTS.CMN.BUSINESS_VARIABLE WITH(NOLOCK) WHERE VARIABLE_CODE = 'RPT_BANK_ADDRESS')C				   
--				--->END OF INSERT INTO SELECT STATEMENT		
--					-- WHERE	ID >= @ID_CONTROL AND ID < @ID_CONTROL + @BATCH_SIZE AND HEADER_ID = @HEADER_ID	--BATCH CONTROL OF THE CURRENT BATCH	
--				SET @RESULTS = @@ROWCOUNT --OBTAINING LATEST ROWCOUNT
--				SET @ROWS_INSERTED = @RESULTS + @ROWS_INSERTED
--			END
--		END TRY 
--		BEGIN CATCH
--			SET @ERR_MSG = ERROR_MESSAGE()
--			INSERT INTO CBDB_REPORTS.RPT.ERROR_DETAILS ([ERROR_NUMBER],[ERROR_SEVERITY],[ERROR_STATE],[ERROR_LINE],[ERROR_MESSAGE],[ERROR_TABLE],[TRANCOUNT],[REMARKS],[DATE_OCCURED])
--			VALUES (ERROR_NUMBER(), ERROR_SEVERITY(), ERROR_STATE(),ERROR_LINE(),ERROR_MESSAGE(),@REPORT_TABLE_NAME, CONVERT(varchar, @@TRANCOUNT),'',GETDATE());
--			--LOG AFTER ERROR
--			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @STATUS = 3, @FAIL_EXCEPTION = @ERR_MSG, @STAGE_TABLE_NAME = @SCHEMA_NAME;
--			THROW; --THROW ERROR TO FE
--		END CATCH

--		--LOG FINISH IF THE TABLE HAS NO ERROR 
--		IF @ERR_MSG IS NULL OR @ERR_MSG = ''
--		BEGIN
--			EXEC LOG_DETAILS @COPY_HEADER_ID = @HEADER_ID, @COPY_DETAIL_ID = @DETAIL_ID, @TABLE_NAME = @REPORT_TABLE_NAME, @BUS_DATE = @BIZ_DATE, @RECORD_COUNT = @ROWS_INSERTED, @STATUS = 4, @MODULE_CODE = @MODULE_CODE, @SCHEMA_NAME = @SCHEMA_NAME, @STAGE_TABLE_NAME = @SRC_TABLE_NAME
--			SET @TABLE_SUCCEEDED = @TABLE_SUCCEEDED + 1
--		END

--		--CLEAR VARIABLES
--		SET @STAGE_TABLE_NAME = ''
--		SET @REPORT_TABLE_NAME = ''
--		SET @IS_DUMP = 0
--		SET @DETAIL_ID = 0
--		SET @ERR_MSG = ''
--	END
--END
/*************************RPT.BANK_DETAILS[END]**************************/

/*************************CMN SP LOGGING[END]**************************/
EXEC CBDB_STAGE.dbo.FILL_BANK_DETAILS @HEADER_ID = @HEADER_ID, @BUSINESS_DATE = @BIZ_DATE
EXEC CBDB_STAGE.dbo.FILL_REPORT_CONFIG_TABLE @HEADER_ID = @HEADER_ID, @BUSINESS_DATE = @BIZ_DATE
--PRINT 'TABLE COUNT = ' + CAST(@TABLE_COUNT AS VARCHAR(MAX))
--PRINT 'TABLE_SUCCEEDED = ' + CAST(@TABLE_SUCCEEDED AS VARCHAR(MAX))
IF @TABLE_COUNT = @TABLE_SUCCEEDED
BEGIN
	SET @DURATION = DATEDIFF(SECOND, (SELECT TOP 1 TIME_STARTED FROM CBDB_REPORTS.RPT.SP_LOG WHERE HEADER_ID = @HEADER_ID AND BUSINESS_DATE = @BIZ_DATE ORDER BY ID DESC), GETDATE())		
	SET @TOTAL_INSERTED_RECORDS = (SELECT TOTAL_DUMP_RECORD + TOTAL_DELTA_RECORD FROM CBDB_REPORTS.CMN.DATA_COPY_HEADER	WHERE ID = @HEADER_ID AND MODULE_CODE = @MODULE_CODE)
	UPDATE CBDB_REPORTS.RPT.SP_LOG
		SET STATUS	   = 4,
			TIME_ENDED = GETDATE(),
			DURATION   = @DURATION,
			INSERTED_RECORDS = @TOTAL_INSERTED_RECORDS
	WHERE HEADER_ID = @HEADER_ID AND BUSINESS_DATE = @BIZ_DATE  AND NAME = @SP_NAME
	PRINT 'STATUS : COMPLETED | PROCEDURE NAME : ' + @SP_NAME + ' | HEADER_ID : ' + CAST(@HEADER_ID AS VARCHAR(MAX)) + ' | RECORD COUNT : ' + CAST(@TOTAL_INSERTED_RECORDS AS VARCHAR(MAX)) + ' | TIME ENDED : ' + CAST(GETDATE() AS VARCHAR(MAX)) + ' | DURATION : ' + CONVERT(VARCHAR(50),@DURATION)			       
	PRINT '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
END
ELSE
BEGIN
	UPDATE CBDB_REPORTS.RPT.SP_LOG
				SET STATUS = 3
			WHERE HEADER_ID = @HEADER_ID AND BUSINESS_DATE = @BIZ_DATE
			PRINT '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
			PRINT 'STATUS : FAILED     | PROCEDURE NAME : ' + @SP_NAME + ' | HEADER_ID : ' + CAST(@HEADER_ID AS VARCHAR(MAX)) + ' | BUSINESS DATE : ' + CAST(@BIZ_DATE AS VARCHAR(MAX)) + ' | PLEASE SEE ERROR DETAILS IN DATA_COPY_DETAIL '
			PRINT '---------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
END
/*************************CMN SP LOGGING[END]**************************/
PRINT '*************************************************************************** ' + @SCHEMA_NAME + ' FINALIZER [END] *********************************************************************************'


END
